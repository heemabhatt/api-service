name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events for the listed branches
on:
  push:
    branches: [Dev, Stage1, Prod]
  pull_request:
    branches: [ master ]

 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
   
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
        
    - uses: nelonoel/branch-name@v1
    - run: echo ${BRANCH_NAME}
    - run: echo "::set-env name=BRANCH::${BRANCH_NAME}"
      
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v2
      with:
        token: ${{secrets.github_token}}
         
    - name: Deploy To Dev
      if: contains(env.BRANCH, 'Dev')
      run: echo 'Now Deploying to Dev'
              
    - name: Deploy To Stage
      if: contains(env.BRANCH, 'Stage')
      run: echo 'Now Deploying to Stage'

    - name: Check if environment specific config file exists
      run: if [ -f "src/main/resources/ConfigFiles/Configuration.${BRANCH_NAME}.json" ]; then echo "File downloaded"; fi
    
    - name: Install jq
      run: sudo apt-get update -y && sudo apt-get install -y jq
    
    - name: create environment variables list using jq
      run: echo $(jq -r '. | to_entries[] | "\(.key)=\(.value) "' src/main/resources/ConfigFiles/Configuration.${BRANCH_NAME}.json)
    
    - name: Build with Maven
      run: mvn versions:set -DnewVersion=1.0.${{ steps.buildnumber.outputs.build_number }} && mvn package -s settings.xml

    - name: Check if jar generated correctly  
      run:  if [ -f "target/demo-1.0.${{ steps.buildnumber.outputs.build_number }}.jar" ]; then echo "File Exists"; fi
#       - name: Login to Azure Spring Cloud
#         uses: azure/login@v1
#         with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
#       - name: Install Azure Spring Cloud extension
#         run: az extension add -y --name spring-cloud
#       - name: Delete app
#         run: az spring-cloud app delete -n api-service --resource-group rg-spring-cloud-demo-hkb --service spring-cloud-demo-hkb
#       - name: Create app
#         run: az spring-cloud app create -n api-service --runtime-version Java_11 --resource-group rg-spring-cloud-demo-hkb --service spring-cloud-demo-hkb

#       - name: Deploy to Azure Spring Cloud
#         run: |
#             az spring-cloud app deploy --resource-group rg-spring-cloud-demo-hkb --service spring-cloud-demo-hkb --name api-service \
#             --jar-path ./deploydir/demo-${{ steps.buildnumber.outputs.build_number }}.jar 
#            --env $(jq -r '. | to_entries[] | "\(.key)=\(.value) "' src/main/scripts/test_props.json)
