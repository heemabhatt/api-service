name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events for the listed branches
on:
  push:
    branches: [ Stage]
  pull_request:
    branches: [ master1 ]

 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
   
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
        
 
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v2
      with:
        token: ${{secrets.github_token}}  
    
    - name: Build with Maven
      run: mvn versions:set -DnewVersion=1.0.${{ steps.buildnumber.outputs.build_number }} && mvn package -s settings.xml
    
    - name: set environment variables
      run: |
        export ASC_JAR_PATH=target/demo-1.0.${{ steps.buildnumber.outputs.build_number }}.jar
        echo "::set-env name=ASC_JAR_PATH::$ASC_JAR_PATH"
      
    - name: show jar path 
      run: echo $ASC_JAR_PATH
      
    - name: Check if jar generated correctly  
      run:  if [ -f "target/demo-1.0.${{ steps.buildnumber.outputs.build_number }}.jar" ]; then echo "File Exists"; fi
         
    - name: Login to Azure Spring Cloud
      uses: azure/login@v1
      with:
         creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: install extension
      run: az extension add -n spring-cloud
    
    - name: Delete app
      run: az spring-cloud app delete -n api-service --resource-group rg-spring-cloud-demo-hkb --service spring-cloud-demo-hkb
    - name: Create app
      run: az spring-cloud app create -n api-service --runtime-version Java_11 --resource-group rg-spring-cloud-demo-hkb --service spring-cloud-demo-hkb
    - name: Check if environment specific config file exists
      run: if [ -f "src/main/resources/ConfigFiles/Configuration.${BRANCH_NAME}.json" ]; then echo "File downloaded"; fi
    
    - name: Install jq
      run: sudo apt-get update -y && sudo apt-get install -y jq
    
    - name: create environment variables list using jq
      run: echo $(jq -r '. | to_entries[] | "\(.key)=\(.value) "' src/main/resources/ConfigFiles/Configuration.${BRANCH_NAME}.json)
   
#       - name: Deploy to Azure Spring Cloud
#         run: |
#             az spring-cloud app deploy --resource-group rg-spring-cloud-demo-hkb --service spring-cloud-demo-hkb --name api-service \
#             --jar-path ./deploydir/demo-${{ steps.buildnumber.outputs.build_number }}.jar 
#            --env $(jq -r '. | to_entries[] | "\(.key)=\(.value) "' src/main/scripts/test_props.json)
    - name: Change Permissions
      run: chmod 777 $GITHUB_WORKSPACE/scripts/green-blue-deployment.sh
      
    - name: Run Green Blue Deployment
      run: $GITHUB_WORKSPACE/scripts/green-blue-deployment.sh


#   release-on-push:
#     runs-on: ubuntu-latest
#     needs: [build]
#     env:
#       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#     steps:
#       - uses: rymndhng/release-on-push-action@master
#         with:
#           bump_version_scheme: minor
