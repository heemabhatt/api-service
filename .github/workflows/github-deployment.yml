# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
  
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11

    - name: Build with Maven
      run: mvn package -Pcloud -s settings.xml 
    - name: Generate build info
      run:  mvn spring-boot:build-info
    - name: show build info
      run: if [ -f "target/classes/META-INF/build-info.properties" ]; then echo "build info File exists"; fi
    - name: Read value from Properties-file
      id: read_property
      uses: christian-draeger/read-properties@1.0.1
      with:
       path: 'target/classes/META-INF/build-info.properties'
       property: 'build.continuousIntegration.buildNumber'
    - name: Do something with your bumped release version
      run: echo ${{ steps.read_property.outputs.value }}
  # will print "the value of 'the.key.of.the.property'"
#   artifact:
#     name: Publish - Artifact
#     runs-on: ubuntu-18.04
    
#     steps:
#       - uses: actions/checkout@v1
#       - name: Set up JDK 11
#         uses: actions/setup-java@v1
#         with:
#           java-version:  1.11
#       - name: Publish artifact 
#         run: mvn deploy -s settings.xml

#   deploy:
#     runs-on: ubuntu-latest
#     steps: 
#       - name: Create deploy director
#         run: mkdir deploydir && curl -u admin:AKCp5fUhvYKnyBkh7xken3P5yM3H4k9W9vte6yRoVKJExqkiDDTPU7p3myib7w53y45fvZr3X http://69.250.67.37:8082/artifactory/hkbrepository/com/example/demo/0.0.1-SNAPSHOT/demo-0.0.1-20200824.145520-5.jar -o ./deploydir/demo-0.0.1-20200824.145520-5.jar  
#       - name: Check if download successful
#         run:  if [ -f "./deploydir/demo-0.0.1-20200824.145520-5.jar" ]; then echo "File downloaded"; fi
#       - name: Login to Azure Spring Cloud
#         uses: azure/login@v1
#         with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
#       - name: Install Azure Spring Cloud extension
#         run: az extension add -y --name spring-cloud
#       - name: Delete app
#         run: az spring-cloud app delete -n api-service --resource-group rg-spring-cloud-demo-hkb --service spring-cloud-demo-hkb
#       - name: Create app
#         run: az spring-cloud app create -n api-service --runtime-version Java_11 --resource-group rg-spring-cloud-demo-hkb --service spring-cloud-demo-hkb
#       - name: Install jq
#         run: sudo apt-get update -y && sudo apt-get install -y jq
#       - name: create environment variables list using jq
#         run: echo $(jq -r '. | to_entries[] | "\(.key)=\(.value) "' src/main/scripts/test_props.json)
#       - name: Print Environment variables
#         run: echo "$CUSTOM_VAR"
#       - name: Deploy to Azure Spring Cloud
#         run: |
#             az spring-cloud app deploy --resource-group rg-spring-cloud-demo-hkb --service spring-cloud-demo-hkb --name api-service \
#             --jar-path ./deploydir/demo-0.0.1-20200824.145520-5.jar 
#            --env $(jq -r '. | to_entries[] | "\(.key)=\(.value) "' src/main/scripts/test_props.json)
